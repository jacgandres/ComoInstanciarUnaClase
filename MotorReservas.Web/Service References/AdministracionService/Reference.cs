//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34209
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MotorReservas.Web.AdministracionService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="AdministracionService.IAdministracion")]
    public interface IAdministracion {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdministracion/RegistrarUsuario", ReplyAction="http://tempuri.org/IAdministracion/RegistrarUsuarioResponse")]
        bool RegistrarUsuario(MotorReservas.Entidad.Usuario pUsuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdministracion/RegistrarUsuario", ReplyAction="http://tempuri.org/IAdministracion/RegistrarUsuarioResponse")]
        System.Threading.Tasks.Task<bool> RegistrarUsuarioAsync(MotorReservas.Entidad.Usuario pUsuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdministracion/ListarUsuarios", ReplyAction="http://tempuri.org/IAdministracion/ListarUsuariosResponse")]
        System.Collections.Generic.List<MotorReservas.Entidad.Usuario> ListarUsuarios();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdministracion/ListarUsuarios", ReplyAction="http://tempuri.org/IAdministracion/ListarUsuariosResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<MotorReservas.Entidad.Usuario>> ListarUsuariosAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdministracion/ActualizarUsuario", ReplyAction="http://tempuri.org/IAdministracion/ActualizarUsuarioResponse")]
        bool ActualizarUsuario(MotorReservas.Entidad.Usuario pUsuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdministracion/ActualizarUsuario", ReplyAction="http://tempuri.org/IAdministracion/ActualizarUsuarioResponse")]
        System.Threading.Tasks.Task<bool> ActualizarUsuarioAsync(MotorReservas.Entidad.Usuario pUsuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdministracion/EliminarUsuario", ReplyAction="http://tempuri.org/IAdministracion/EliminarUsuarioResponse")]
        bool EliminarUsuario(MotorReservas.Entidad.Usuario pUsuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdministracion/EliminarUsuario", ReplyAction="http://tempuri.org/IAdministracion/EliminarUsuarioResponse")]
        System.Threading.Tasks.Task<bool> EliminarUsuarioAsync(MotorReservas.Entidad.Usuario pUsuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdministracion/ObtenerModulosRolPorUsuario", ReplyAction="http://tempuri.org/IAdministracion/ObtenerModulosRolPorUsuarioResponse")]
        System.Collections.Generic.List<MotorReservas.Entidad.Modulo> ObtenerModulosRolPorUsuario(MotorReservas.Entidad.Usuario pUsuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdministracion/ObtenerModulosRolPorUsuario", ReplyAction="http://tempuri.org/IAdministracion/ObtenerModulosRolPorUsuarioResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<MotorReservas.Entidad.Modulo>> ObtenerModulosRolPorUsuarioAsync(MotorReservas.Entidad.Usuario pUsuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdministracion/IniciarSesionUsuario", ReplyAction="http://tempuri.org/IAdministracion/IniciarSesionUsuarioResponse")]
        MotorReservas.Entidad.Usuario IniciarSesionUsuario(MotorReservas.Entidad.Usuario pUsuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdministracion/IniciarSesionUsuario", ReplyAction="http://tempuri.org/IAdministracion/IniciarSesionUsuarioResponse")]
        System.Threading.Tasks.Task<MotorReservas.Entidad.Usuario> IniciarSesionUsuarioAsync(MotorReservas.Entidad.Usuario pUsuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdministracion/ObtenerUsuarioPorId", ReplyAction="http://tempuri.org/IAdministracion/ObtenerUsuarioPorIdResponse")]
        MotorReservas.Entidad.Usuario ObtenerUsuarioPorId(MotorReservas.Entidad.Usuario pUsuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdministracion/ObtenerUsuarioPorId", ReplyAction="http://tempuri.org/IAdministracion/ObtenerUsuarioPorIdResponse")]
        System.Threading.Tasks.Task<MotorReservas.Entidad.Usuario> ObtenerUsuarioPorIdAsync(MotorReservas.Entidad.Usuario pUsuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdministracion/ObtenerEmpresas", ReplyAction="http://tempuri.org/IAdministracion/ObtenerEmpresasResponse")]
        System.Collections.Generic.List<MotorReservas.Entidad.Empresa> ObtenerEmpresas();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdministracion/ObtenerEmpresas", ReplyAction="http://tempuri.org/IAdministracion/ObtenerEmpresasResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<MotorReservas.Entidad.Empresa>> ObtenerEmpresasAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdministracion/ListarRoles", ReplyAction="http://tempuri.org/IAdministracion/ListarRolesResponse")]
        System.Collections.Generic.List<MotorReservas.Entidad.Rol> ListarRoles();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdministracion/ListarRoles", ReplyAction="http://tempuri.org/IAdministracion/ListarRolesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<MotorReservas.Entidad.Rol>> ListarRolesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdministracion/ObtenerRolesPorUsuario", ReplyAction="http://tempuri.org/IAdministracion/ObtenerRolesPorUsuarioResponse")]
        System.Collections.Generic.List<MotorReservas.Entidad.Rol> ObtenerRolesPorUsuario(MotorReservas.Entidad.Usuario pUsuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdministracion/ObtenerRolesPorUsuario", ReplyAction="http://tempuri.org/IAdministracion/ObtenerRolesPorUsuarioResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<MotorReservas.Entidad.Rol>> ObtenerRolesPorUsuarioAsync(MotorReservas.Entidad.Usuario pUsuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdministracion/RegistrarRol", ReplyAction="http://tempuri.org/IAdministracion/RegistrarRolResponse")]
        bool RegistrarRol(MotorReservas.Entidad.Rol pRol);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdministracion/RegistrarRol", ReplyAction="http://tempuri.org/IAdministracion/RegistrarRolResponse")]
        System.Threading.Tasks.Task<bool> RegistrarRolAsync(MotorReservas.Entidad.Rol pRol);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdministracion/ActualizarRol", ReplyAction="http://tempuri.org/IAdministracion/ActualizarRolResponse")]
        bool ActualizarRol(MotorReservas.Entidad.Rol pRol);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdministracion/ActualizarRol", ReplyAction="http://tempuri.org/IAdministracion/ActualizarRolResponse")]
        System.Threading.Tasks.Task<bool> ActualizarRolAsync(MotorReservas.Entidad.Rol pRol);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdministracion/EliminarRol", ReplyAction="http://tempuri.org/IAdministracion/EliminarRolResponse")]
        bool EliminarRol(MotorReservas.Entidad.Rol pRol);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdministracion/EliminarRol", ReplyAction="http://tempuri.org/IAdministracion/EliminarRolResponse")]
        System.Threading.Tasks.Task<bool> EliminarRolAsync(MotorReservas.Entidad.Rol pRol);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdministracion/ObtenerRolPorId", ReplyAction="http://tempuri.org/IAdministracion/ObtenerRolPorIdResponse")]
        MotorReservas.Entidad.Rol ObtenerRolPorId(MotorReservas.Entidad.Rol pRol);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdministracion/ObtenerRolPorId", ReplyAction="http://tempuri.org/IAdministracion/ObtenerRolPorIdResponse")]
        System.Threading.Tasks.Task<MotorReservas.Entidad.Rol> ObtenerRolPorIdAsync(MotorReservas.Entidad.Rol pRol);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdministracion/ObtenerModulosPorRol", ReplyAction="http://tempuri.org/IAdministracion/ObtenerModulosPorRolResponse")]
        System.Collections.Generic.List<MotorReservas.Entidad.Modulo> ObtenerModulosPorRol(MotorReservas.Entidad.Rol pRol);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdministracion/ObtenerModulosPorRol", ReplyAction="http://tempuri.org/IAdministracion/ObtenerModulosPorRolResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<MotorReservas.Entidad.Modulo>> ObtenerModulosPorRolAsync(MotorReservas.Entidad.Rol pRol);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdministracion/VerificarUsuarioTieneRol", ReplyAction="http://tempuri.org/IAdministracion/VerificarUsuarioTieneRolResponse")]
        bool VerificarUsuarioTieneRol(MotorReservas.Entidad.Usuario_Tiene_Rol pUsuarioRol);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdministracion/VerificarUsuarioTieneRol", ReplyAction="http://tempuri.org/IAdministracion/VerificarUsuarioTieneRolResponse")]
        System.Threading.Tasks.Task<bool> VerificarUsuarioTieneRolAsync(MotorReservas.Entidad.Usuario_Tiene_Rol pUsuarioRol);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdministracion/IngresarRolUsuario", ReplyAction="http://tempuri.org/IAdministracion/IngresarRolUsuarioResponse")]
        bool IngresarRolUsuario(MotorReservas.Entidad.Usuario_Tiene_Rol pUsuarioRol);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdministracion/IngresarRolUsuario", ReplyAction="http://tempuri.org/IAdministracion/IngresarRolUsuarioResponse")]
        System.Threading.Tasks.Task<bool> IngresarRolUsuarioAsync(MotorReservas.Entidad.Usuario_Tiene_Rol pUsuarioRol);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdministracion/EliminarRolUsuario", ReplyAction="http://tempuri.org/IAdministracion/EliminarRolUsuarioResponse")]
        bool EliminarRolUsuario(MotorReservas.Entidad.Usuario_Tiene_Rol pUsuarioRol);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdministracion/EliminarRolUsuario", ReplyAction="http://tempuri.org/IAdministracion/EliminarRolUsuarioResponse")]
        System.Threading.Tasks.Task<bool> EliminarRolUsuarioAsync(MotorReservas.Entidad.Usuario_Tiene_Rol pUsuarioRol);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdministracion/EliminarModuloRolPorId", ReplyAction="http://tempuri.org/IAdministracion/EliminarModuloRolPorIdResponse")]
        bool EliminarModuloRolPorId(MotorReservas.Entidad.Modulos_Tiene_Rol pModuloRol);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdministracion/EliminarModuloRolPorId", ReplyAction="http://tempuri.org/IAdministracion/EliminarModuloRolPorIdResponse")]
        System.Threading.Tasks.Task<bool> EliminarModuloRolPorIdAsync(MotorReservas.Entidad.Modulos_Tiene_Rol pModuloRol);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdministracion/RegistrarModuloRol", ReplyAction="http://tempuri.org/IAdministracion/RegistrarModuloRolResponse")]
        bool RegistrarModuloRol(MotorReservas.Entidad.Modulos_Tiene_Rol pModuloRol);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdministracion/RegistrarModuloRol", ReplyAction="http://tempuri.org/IAdministracion/RegistrarModuloRolResponse")]
        System.Threading.Tasks.Task<bool> RegistrarModuloRolAsync(MotorReservas.Entidad.Modulos_Tiene_Rol pModuloRol);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdministracion/ObtenerModulos", ReplyAction="http://tempuri.org/IAdministracion/ObtenerModulosResponse")]
        System.Collections.Generic.List<MotorReservas.Entidad.Modulo> ObtenerModulos();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdministracion/ObtenerModulos", ReplyAction="http://tempuri.org/IAdministracion/ObtenerModulosResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<MotorReservas.Entidad.Modulo>> ObtenerModulosAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IAdministracionChannel : MotorReservas.Web.AdministracionService.IAdministracion, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AdministracionClient : System.ServiceModel.ClientBase<MotorReservas.Web.AdministracionService.IAdministracion>, MotorReservas.Web.AdministracionService.IAdministracion {
        
        public AdministracionClient() {
        }
        
        public AdministracionClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public AdministracionClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AdministracionClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AdministracionClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool RegistrarUsuario(MotorReservas.Entidad.Usuario pUsuario) {
            return base.Channel.RegistrarUsuario(pUsuario);
        }
        
        public System.Threading.Tasks.Task<bool> RegistrarUsuarioAsync(MotorReservas.Entidad.Usuario pUsuario) {
            return base.Channel.RegistrarUsuarioAsync(pUsuario);
        }
        
        public System.Collections.Generic.List<MotorReservas.Entidad.Usuario> ListarUsuarios() {
            return base.Channel.ListarUsuarios();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<MotorReservas.Entidad.Usuario>> ListarUsuariosAsync() {
            return base.Channel.ListarUsuariosAsync();
        }
        
        public bool ActualizarUsuario(MotorReservas.Entidad.Usuario pUsuario) {
            return base.Channel.ActualizarUsuario(pUsuario);
        }
        
        public System.Threading.Tasks.Task<bool> ActualizarUsuarioAsync(MotorReservas.Entidad.Usuario pUsuario) {
            return base.Channel.ActualizarUsuarioAsync(pUsuario);
        }
        
        public bool EliminarUsuario(MotorReservas.Entidad.Usuario pUsuario) {
            return base.Channel.EliminarUsuario(pUsuario);
        }
        
        public System.Threading.Tasks.Task<bool> EliminarUsuarioAsync(MotorReservas.Entidad.Usuario pUsuario) {
            return base.Channel.EliminarUsuarioAsync(pUsuario);
        }
        
        public System.Collections.Generic.List<MotorReservas.Entidad.Modulo> ObtenerModulosRolPorUsuario(MotorReservas.Entidad.Usuario pUsuario) {
            return base.Channel.ObtenerModulosRolPorUsuario(pUsuario);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<MotorReservas.Entidad.Modulo>> ObtenerModulosRolPorUsuarioAsync(MotorReservas.Entidad.Usuario pUsuario) {
            return base.Channel.ObtenerModulosRolPorUsuarioAsync(pUsuario);
        }
        
        public MotorReservas.Entidad.Usuario IniciarSesionUsuario(MotorReservas.Entidad.Usuario pUsuario) {
            return base.Channel.IniciarSesionUsuario(pUsuario);
        }
        
        public System.Threading.Tasks.Task<MotorReservas.Entidad.Usuario> IniciarSesionUsuarioAsync(MotorReservas.Entidad.Usuario pUsuario) {
            return base.Channel.IniciarSesionUsuarioAsync(pUsuario);
        }
        
        public MotorReservas.Entidad.Usuario ObtenerUsuarioPorId(MotorReservas.Entidad.Usuario pUsuario) {
            return base.Channel.ObtenerUsuarioPorId(pUsuario);
        }
        
        public System.Threading.Tasks.Task<MotorReservas.Entidad.Usuario> ObtenerUsuarioPorIdAsync(MotorReservas.Entidad.Usuario pUsuario) {
            return base.Channel.ObtenerUsuarioPorIdAsync(pUsuario);
        }
        
        public System.Collections.Generic.List<MotorReservas.Entidad.Empresa> ObtenerEmpresas() {
            return base.Channel.ObtenerEmpresas();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<MotorReservas.Entidad.Empresa>> ObtenerEmpresasAsync() {
            return base.Channel.ObtenerEmpresasAsync();
        }
        
        public System.Collections.Generic.List<MotorReservas.Entidad.Rol> ListarRoles() {
            return base.Channel.ListarRoles();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<MotorReservas.Entidad.Rol>> ListarRolesAsync() {
            return base.Channel.ListarRolesAsync();
        }
        
        public System.Collections.Generic.List<MotorReservas.Entidad.Rol> ObtenerRolesPorUsuario(MotorReservas.Entidad.Usuario pUsuario) {
            return base.Channel.ObtenerRolesPorUsuario(pUsuario);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<MotorReservas.Entidad.Rol>> ObtenerRolesPorUsuarioAsync(MotorReservas.Entidad.Usuario pUsuario) {
            return base.Channel.ObtenerRolesPorUsuarioAsync(pUsuario);
        }
        
        public bool RegistrarRol(MotorReservas.Entidad.Rol pRol) {
            return base.Channel.RegistrarRol(pRol);
        }
        
        public System.Threading.Tasks.Task<bool> RegistrarRolAsync(MotorReservas.Entidad.Rol pRol) {
            return base.Channel.RegistrarRolAsync(pRol);
        }
        
        public bool ActualizarRol(MotorReservas.Entidad.Rol pRol) {
            return base.Channel.ActualizarRol(pRol);
        }
        
        public System.Threading.Tasks.Task<bool> ActualizarRolAsync(MotorReservas.Entidad.Rol pRol) {
            return base.Channel.ActualizarRolAsync(pRol);
        }
        
        public bool EliminarRol(MotorReservas.Entidad.Rol pRol) {
            return base.Channel.EliminarRol(pRol);
        }
        
        public System.Threading.Tasks.Task<bool> EliminarRolAsync(MotorReservas.Entidad.Rol pRol) {
            return base.Channel.EliminarRolAsync(pRol);
        }
        
        public MotorReservas.Entidad.Rol ObtenerRolPorId(MotorReservas.Entidad.Rol pRol) {
            return base.Channel.ObtenerRolPorId(pRol);
        }
        
        public System.Threading.Tasks.Task<MotorReservas.Entidad.Rol> ObtenerRolPorIdAsync(MotorReservas.Entidad.Rol pRol) {
            return base.Channel.ObtenerRolPorIdAsync(pRol);
        }
        
        public System.Collections.Generic.List<MotorReservas.Entidad.Modulo> ObtenerModulosPorRol(MotorReservas.Entidad.Rol pRol) {
            return base.Channel.ObtenerModulosPorRol(pRol);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<MotorReservas.Entidad.Modulo>> ObtenerModulosPorRolAsync(MotorReservas.Entidad.Rol pRol) {
            return base.Channel.ObtenerModulosPorRolAsync(pRol);
        }
        
        public bool VerificarUsuarioTieneRol(MotorReservas.Entidad.Usuario_Tiene_Rol pUsuarioRol) {
            return base.Channel.VerificarUsuarioTieneRol(pUsuarioRol);
        }
        
        public System.Threading.Tasks.Task<bool> VerificarUsuarioTieneRolAsync(MotorReservas.Entidad.Usuario_Tiene_Rol pUsuarioRol) {
            return base.Channel.VerificarUsuarioTieneRolAsync(pUsuarioRol);
        }
        
        public bool IngresarRolUsuario(MotorReservas.Entidad.Usuario_Tiene_Rol pUsuarioRol) {
            return base.Channel.IngresarRolUsuario(pUsuarioRol);
        }
        
        public System.Threading.Tasks.Task<bool> IngresarRolUsuarioAsync(MotorReservas.Entidad.Usuario_Tiene_Rol pUsuarioRol) {
            return base.Channel.IngresarRolUsuarioAsync(pUsuarioRol);
        }
        
        public bool EliminarRolUsuario(MotorReservas.Entidad.Usuario_Tiene_Rol pUsuarioRol) {
            return base.Channel.EliminarRolUsuario(pUsuarioRol);
        }
        
        public System.Threading.Tasks.Task<bool> EliminarRolUsuarioAsync(MotorReservas.Entidad.Usuario_Tiene_Rol pUsuarioRol) {
            return base.Channel.EliminarRolUsuarioAsync(pUsuarioRol);
        }
        
        public bool EliminarModuloRolPorId(MotorReservas.Entidad.Modulos_Tiene_Rol pModuloRol) {
            return base.Channel.EliminarModuloRolPorId(pModuloRol);
        }
        
        public System.Threading.Tasks.Task<bool> EliminarModuloRolPorIdAsync(MotorReservas.Entidad.Modulos_Tiene_Rol pModuloRol) {
            return base.Channel.EliminarModuloRolPorIdAsync(pModuloRol);
        }
        
        public bool RegistrarModuloRol(MotorReservas.Entidad.Modulos_Tiene_Rol pModuloRol) {
            return base.Channel.RegistrarModuloRol(pModuloRol);
        }
        
        public System.Threading.Tasks.Task<bool> RegistrarModuloRolAsync(MotorReservas.Entidad.Modulos_Tiene_Rol pModuloRol) {
            return base.Channel.RegistrarModuloRolAsync(pModuloRol);
        }
        
        public System.Collections.Generic.List<MotorReservas.Entidad.Modulo> ObtenerModulos() {
            return base.Channel.ObtenerModulos();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<MotorReservas.Entidad.Modulo>> ObtenerModulosAsync() {
            return base.Channel.ObtenerModulosAsync();
        }
    }
}
